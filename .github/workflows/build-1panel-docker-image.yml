name: Build 1Panel Docker Image
on:
  workflow_call:
    inputs:
      version:
        description: "1Panel Version (Empty for latest)"
        type: string
        required: true
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      version:
        description: "1Panel Version (Empty for latest)"
        type: string
        required: true

jobs:
  build_images:
    name: Build Multi-platform Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ['dood', 'dind']
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Get Version
        id: get_version
        run: |
          VER_INPUT=${{ inputs.version }}
          echo "PANELVER=${VER_INPUT}" >> $GITHUB_OUTPUT
      - 
        name: Generate Docker tags
        id: generate_tags
        run: |
          TAGS="${{ secrets.DOCKERHUB_USERNAME }}/1panel:${{ matrix.folder }}-${{ steps.get_version.outputs.PANELVER }}, ${{ secrets.DOCKERHUB_USERNAME }}/1panel:${{ matrix.folder }}-latest"
          if [ "${{ matrix.folder }}" = "dind" ]; then
            TAGS="$TAGS,${{ secrets.DOCKERHUB_USERNAME }}/1panel:${{ steps.get_version.outputs.PANELVER }},${{ secrets.DOCKERHUB_USERNAME }}/1panel:latest"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT
      -
        name: Build and push stable
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ${{ matrix.folder }}
          file: ${{ matrix.folder }}/Dockerfile
          build-args: |
            PANELVER=${{ steps.get_version.outputs.PANELVER }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          tags: ${{ steps.generate_tags.outputs.tags }}
